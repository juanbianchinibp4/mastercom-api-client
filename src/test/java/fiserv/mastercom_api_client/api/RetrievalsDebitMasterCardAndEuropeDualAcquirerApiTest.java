/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fiserv.mastercom_api_client.api;

import fiserv.mastercom_api_client.ApiException;
import fiserv.mastercom_api_client.model.CreateRetrievalRequestSingle;
import fiserv.mastercom_api_client.model.CreateRetrievalResponse;
import fiserv.mastercom_api_client.model.DocumentResponseStructure;
import fiserv.mastercom_api_client.model.IssuerFulfillmentRequest;
import fiserv.mastercom_api_client.model.RetrievalResponse;
import fiserv.mastercom_api_client.model.RetrievalStatusRequest;
import fiserv.mastercom_api_client.model.RetrievalStatusResponse;
import fiserv.mastercom_api_client.model.RetrievalsImageStatusRequest;
import fiserv.mastercom_api_client.model.RetrievalsImageStatusResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * API tests for RetrievalsDebitMasterCardAndEuropeDualAcquirerApi
 */
@Disabled
public class RetrievalsDebitMasterCardAndEuropeDualAcquirerApiTest {

    private final RetrievalsDebitMasterCardAndEuropeDualAcquirerApi api = new RetrievalsDebitMasterCardAndEuropeDualAcquirerApi();

    /**
     * Prior to creating a chargeback, an issuer uses this endpoint to create a retrieval request for a Debit Mastercard or Europe Dual Acquirer transaction for the acquirer to fulfill by providing a copy of the transaction information document (TID). The TID is used to satisfy a cardholder&#39;s inquiry or to satisfy an issuer&#39;s investigation of an original transaction.   NOTE: An issuer is not required to create a retrieval request in order to create a first chargeback on a claim.   NOTE:Â Creation of retrieval request is allowed only for reversalReasonCode (healthcare reason code (43)) starting on October 24th, 2021.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRetrievalRequestDebitMCTest() throws ApiException {
        String claimId = null;
        CreateRetrievalRequestSingle body = null;
        CreateRetrievalResponse response = api.createRetrievalRequestDebitMC(claimId, body);
        // TODO: test validations
    }

    /**
     * Issuers and acquirers use this endpoint to retrieve all documents from acquirers associated with retrieval request fulfillment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRetrievalDocDebitMCTest() throws ApiException {
        String claimId = null;
        String requestId = null;
        String format = null;
        DocumentResponseStructure response = api.getRetrievalDocDebitMC(claimId, requestId, format);
        // TODO: test validations
    }

    /**
     * After an acquirer fulfills a retrieval request, an issuer uses this endpoint to approve or reject a retrieval request fulfillment. The issuer approves the fulfillment or rejects the fulfillment if the documentation does not meet requirements.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void issuerResponseRetrievalDebitMCRequestTest() throws ApiException {
        String claimId = null;
        String requestId = null;
        IssuerFulfillmentRequest body = null;
        RetrievalResponse response = api.issuerResponseRetrievalDebitMCRequest(claimId, requestId, body);
        // TODO: test validations
    }

    /**
     * Issuers and acquirers use this endpoint to search for documents that have a specific status (completed, pending, failed, unavailable, and document not applicable) for retrieval requests.   Note: For customers with high volumes of fulfillments or large numbers of BINs, Mastercom recommends using the Retrieval Fullfilment Status endpoint rather than the Retrieval Fullfilment Image Status endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveFulfillmentDebitMCImageStatusTest() throws ApiException {
        RetrievalsImageStatusRequest body = null;
        RetrievalsImageStatusResponse response = api.retrieveFulfillmentDebitMCImageStatus(body);
        // TODO: test validations
    }

    /**
     * Issuers and acquirers use this endpoint to search for the status of documents that are associated with a specific list of retrieval requests.   Note: Issuers and acquirers may send a maximum of 2,000 retrieval fulfillment IDs within a single request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveFulfillmentDebitMCStatusTest() throws ApiException {
        RetrievalStatusRequest body = null;
        RetrievalStatusResponse response = api.retrieveFulfillmentDebitMCStatus(body);
        // TODO: test validations
    }

}

/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fiserv.mastercom_api_client.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fiserv.mastercom_api_client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * TransactionInformationEbdfStructure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-07T19:57:39.604201-03:00[America/Buenos_Aires]")
public class TransactionInformationEbdfStructure {
  public static final String SERIALIZED_NAME_ACQUIRER_REF_DATA_OR_SWITCH_SERIAL_NUM = "acquirerRefDataOrSwitchSerialNum";
  @SerializedName(SERIALIZED_NAME_ACQUIRER_REF_DATA_OR_SWITCH_SERIAL_NUM)
  private String acquirerRefDataOrSwitchSerialNum;

  public static final String SERIALIZED_NAME_MERCHANT_NAME = "merchantName";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NAME)
  private String merchantName;

  public static final String SERIALIZED_NAME_TRANSACTION_OR_SETTLEMENT_DATE = "transactionOrSettlementDate";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_OR_SETTLEMENT_DATE)
  private String transactionOrSettlementDate;

  public static final String SERIALIZED_NAME_DISPUTED_AMOUNT = "disputedAmount";
  @SerializedName(SERIALIZED_NAME_DISPUTED_AMOUNT)
  private String disputedAmount;

  public TransactionInformationEbdfStructure() {
  }

  public TransactionInformationEbdfStructure acquirerRefDataOrSwitchSerialNum(String acquirerRefDataOrSwitchSerialNum) {
    
    this.acquirerRefDataOrSwitchSerialNum = acquirerRefDataOrSwitchSerialNum;
    return this;
  }

   /**
   * Acquirers Reference Data or Switch Serial Number.   Length: 0-23   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return acquirerRefDataOrSwitchSerialNum
  **/
  @javax.annotation.Nullable
  public String getAcquirerRefDataOrSwitchSerialNum() {
    return acquirerRefDataOrSwitchSerialNum;
  }


  public void setAcquirerRefDataOrSwitchSerialNum(String acquirerRefDataOrSwitchSerialNum) {
    this.acquirerRefDataOrSwitchSerialNum = acquirerRefDataOrSwitchSerialNum;
  }


  public TransactionInformationEbdfStructure merchantName(String merchantName) {
    
    this.merchantName = merchantName;
    return this;
  }

   /**
   * The Merchant Name   Length: 0-22   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return merchantName
  **/
  @javax.annotation.Nullable
  public String getMerchantName() {
    return merchantName;
  }


  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }


  public TransactionInformationEbdfStructure transactionOrSettlementDate(String transactionOrSettlementDate) {
    
    this.transactionOrSettlementDate = transactionOrSettlementDate;
    return this;
  }

   /**
   * Transaction or Settlement Date   Length: 11   Valid Values/Format: Date (dd-MMM-yyyy)
   * @return transactionOrSettlementDate
  **/
  @javax.annotation.Nullable
  public String getTransactionOrSettlementDate() {
    return transactionOrSettlementDate;
  }


  public void setTransactionOrSettlementDate(String transactionOrSettlementDate) {
    this.transactionOrSettlementDate = transactionOrSettlementDate;
  }


  public TransactionInformationEbdfStructure disputedAmount(String disputedAmount) {
    
    this.disputedAmount = disputedAmount;
    return this;
  }

   /**
   * The Disputed Amount.   Length: 0-12   Valid Values/Format: Numeric
   * @return disputedAmount
  **/
  @javax.annotation.Nullable
  public String getDisputedAmount() {
    return disputedAmount;
  }


  public void setDisputedAmount(String disputedAmount) {
    this.disputedAmount = disputedAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionInformationEbdfStructure transactionInformationEbdfStructure = (TransactionInformationEbdfStructure) o;
    return Objects.equals(this.acquirerRefDataOrSwitchSerialNum, transactionInformationEbdfStructure.acquirerRefDataOrSwitchSerialNum) &&
        Objects.equals(this.merchantName, transactionInformationEbdfStructure.merchantName) &&
        Objects.equals(this.transactionOrSettlementDate, transactionInformationEbdfStructure.transactionOrSettlementDate) &&
        Objects.equals(this.disputedAmount, transactionInformationEbdfStructure.disputedAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acquirerRefDataOrSwitchSerialNum, merchantName, transactionOrSettlementDate, disputedAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionInformationEbdfStructure {\n");
    sb.append("    acquirerRefDataOrSwitchSerialNum: ").append(toIndentedString(acquirerRefDataOrSwitchSerialNum)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    transactionOrSettlementDate: ").append(toIndentedString(transactionOrSettlementDate)).append("\n");
    sb.append("    disputedAmount: ").append(toIndentedString(disputedAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acquirerRefDataOrSwitchSerialNum");
    openapiFields.add("merchantName");
    openapiFields.add("transactionOrSettlementDate");
    openapiFields.add("disputedAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TransactionInformationEbdfStructure
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TransactionInformationEbdfStructure.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransactionInformationEbdfStructure is not found in the empty JSON string", TransactionInformationEbdfStructure.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TransactionInformationEbdfStructure.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TransactionInformationEbdfStructure` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("acquirerRefDataOrSwitchSerialNum") != null && !jsonObj.get("acquirerRefDataOrSwitchSerialNum").isJsonNull()) && !jsonObj.get("acquirerRefDataOrSwitchSerialNum").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acquirerRefDataOrSwitchSerialNum` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acquirerRefDataOrSwitchSerialNum").toString()));
      }
      if ((jsonObj.get("merchantName") != null && !jsonObj.get("merchantName").isJsonNull()) && !jsonObj.get("merchantName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantName").toString()));
      }
      if ((jsonObj.get("transactionOrSettlementDate") != null && !jsonObj.get("transactionOrSettlementDate").isJsonNull()) && !jsonObj.get("transactionOrSettlementDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionOrSettlementDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionOrSettlementDate").toString()));
      }
      if ((jsonObj.get("disputedAmount") != null && !jsonObj.get("disputedAmount").isJsonNull()) && !jsonObj.get("disputedAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disputedAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disputedAmount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransactionInformationEbdfStructure.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransactionInformationEbdfStructure' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransactionInformationEbdfStructure> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransactionInformationEbdfStructure.class));

       return (TypeAdapter<T>) new TypeAdapter<TransactionInformationEbdfStructure>() {
           @Override
           public void write(JsonWriter out, TransactionInformationEbdfStructure value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TransactionInformationEbdfStructure read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TransactionInformationEbdfStructure given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TransactionInformationEbdfStructure
  * @throws IOException if the JSON string is invalid with respect to TransactionInformationEbdfStructure
  */
  public static TransactionInformationEbdfStructure fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransactionInformationEbdfStructure.class);
  }

 /**
  * Convert an instance of TransactionInformationEbdfStructure to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


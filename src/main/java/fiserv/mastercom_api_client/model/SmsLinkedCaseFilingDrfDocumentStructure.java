/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fiserv.mastercom_api_client.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fiserv.mastercom_api_client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * SmsLinkedCaseFilingDrfDocumentStructure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-07T19:57:39.604201-03:00[America/Buenos_Aires]")
public class SmsLinkedCaseFilingDrfDocumentStructure {
  public static final String SERIALIZED_NAME_CONTACT_NAME = "contactName";
  @SerializedName(SERIALIZED_NAME_CONTACT_NAME)
  private String contactName;

  public static final String SERIALIZED_NAME_COMPANY_OR_INSTITUTION = "companyOrInstitution";
  @SerializedName(SERIALIZED_NAME_COMPANY_OR_INSTITUTION)
  private String companyOrInstitution;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contactEmail";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_REASON_FOR_FILING_CASE = "reasonForFilingCase";
  @SerializedName(SERIALIZED_NAME_REASON_FOR_FILING_CASE)
  private String reasonForFilingCase;

  public static final String SERIALIZED_NAME_PROCESSOR_ID = "processorId";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_ID)
  private String processorId;

  public static final String SERIALIZED_NAME_ACQUIRER_SWITCH_SERIAL_NUM = "acquirerSwitchSerialNum";
  @SerializedName(SERIALIZED_NAME_ACQUIRER_SWITCH_SERIAL_NUM)
  private String acquirerSwitchSerialNum;

  public static final String SERIALIZED_NAME_TRANSACTION_OR_SETTLEMENT_DATE = "transactionOrSettlementDate";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_OR_SETTLEMENT_DATE)
  private String transactionOrSettlementDate;

  public static final String SERIALIZED_NAME_NUMBER_OF_TRANSACTIONS = "numberOfTransactions";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_TRANSACTIONS)
  private String numberOfTransactions;

  public SmsLinkedCaseFilingDrfDocumentStructure() {
  }

  public SmsLinkedCaseFilingDrfDocumentStructure contactName(String contactName) {
    
    this.contactName = contactName;
    return this;
  }

   /**
   * The contact name.   Length: 1-30   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return contactName
  **/
  @javax.annotation.Nullable
  public String getContactName() {
    return contactName;
  }


  public void setContactName(String contactName) {
    this.contactName = contactName;
  }


  public SmsLinkedCaseFilingDrfDocumentStructure companyOrInstitution(String companyOrInstitution) {
    
    this.companyOrInstitution = companyOrInstitution;
    return this;
  }

   /**
   * The company or institution name.   Length: 1-70   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return companyOrInstitution
  **/
  @javax.annotation.Nullable
  public String getCompanyOrInstitution() {
    return companyOrInstitution;
  }


  public void setCompanyOrInstitution(String companyOrInstitution) {
    this.companyOrInstitution = companyOrInstitution;
  }


  public SmsLinkedCaseFilingDrfDocumentStructure contactEmail(String contactEmail) {
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * The contact email.   Length: 1-70   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return contactEmail
  **/
  @javax.annotation.Nullable
  public String getContactEmail() {
    return contactEmail;
  }


  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public SmsLinkedCaseFilingDrfDocumentStructure reasonForFilingCase(String reasonForFilingCase) {
    
    this.reasonForFilingCase = reasonForFilingCase;
    return this;
  }

   /**
   * The reason for filing case.   Length: 1-490   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return reasonForFilingCase
  **/
  @javax.annotation.Nullable
  public String getReasonForFilingCase() {
    return reasonForFilingCase;
  }


  public void setReasonForFilingCase(String reasonForFilingCase) {
    this.reasonForFilingCase = reasonForFilingCase;
  }


  public SmsLinkedCaseFilingDrfDocumentStructure processorId(String processorId) {
    
    this.processorId = processorId;
    return this;
  }

   /**
   * The processor Id.   Length: 1-11   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return processorId
  **/
  @javax.annotation.Nullable
  public String getProcessorId() {
    return processorId;
  }


  public void setProcessorId(String processorId) {
    this.processorId = processorId;
  }


  public SmsLinkedCaseFilingDrfDocumentStructure acquirerSwitchSerialNum(String acquirerSwitchSerialNum) {
    
    this.acquirerSwitchSerialNum = acquirerSwitchSerialNum;
    return this;
  }

   /**
   * The Acquirer Reference Data or Switch Serial Number.   Length: 1-23   Valid Values/Format: Numeric
   * @return acquirerSwitchSerialNum
  **/
  @javax.annotation.Nullable
  public String getAcquirerSwitchSerialNum() {
    return acquirerSwitchSerialNum;
  }


  public void setAcquirerSwitchSerialNum(String acquirerSwitchSerialNum) {
    this.acquirerSwitchSerialNum = acquirerSwitchSerialNum;
  }


  public SmsLinkedCaseFilingDrfDocumentStructure transactionOrSettlementDate(String transactionOrSettlementDate) {
    
    this.transactionOrSettlementDate = transactionOrSettlementDate;
    return this;
  }

   /**
   * The Transaction or Settlement Date.   Length: 11   Valid Values/Format: Date (dd-MMM-yyyy)
   * @return transactionOrSettlementDate
  **/
  @javax.annotation.Nullable
  public String getTransactionOrSettlementDate() {
    return transactionOrSettlementDate;
  }


  public void setTransactionOrSettlementDate(String transactionOrSettlementDate) {
    this.transactionOrSettlementDate = transactionOrSettlementDate;
  }


  public SmsLinkedCaseFilingDrfDocumentStructure numberOfTransactions(String numberOfTransactions) {
    
    this.numberOfTransactions = numberOfTransactions;
    return this;
  }

   /**
   * A numeric count of number of transactions being disputed.   Length: 1-20   Valid Values/Format: (VALUES)/ (Numeric, Alphanumeric, Special Char)
   * @return numberOfTransactions
  **/
  @javax.annotation.Nullable
  public String getNumberOfTransactions() {
    return numberOfTransactions;
  }


  public void setNumberOfTransactions(String numberOfTransactions) {
    this.numberOfTransactions = numberOfTransactions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmsLinkedCaseFilingDrfDocumentStructure smsLinkedCaseFilingDrfDocumentStructure = (SmsLinkedCaseFilingDrfDocumentStructure) o;
    return Objects.equals(this.contactName, smsLinkedCaseFilingDrfDocumentStructure.contactName) &&
        Objects.equals(this.companyOrInstitution, smsLinkedCaseFilingDrfDocumentStructure.companyOrInstitution) &&
        Objects.equals(this.contactEmail, smsLinkedCaseFilingDrfDocumentStructure.contactEmail) &&
        Objects.equals(this.reasonForFilingCase, smsLinkedCaseFilingDrfDocumentStructure.reasonForFilingCase) &&
        Objects.equals(this.processorId, smsLinkedCaseFilingDrfDocumentStructure.processorId) &&
        Objects.equals(this.acquirerSwitchSerialNum, smsLinkedCaseFilingDrfDocumentStructure.acquirerSwitchSerialNum) &&
        Objects.equals(this.transactionOrSettlementDate, smsLinkedCaseFilingDrfDocumentStructure.transactionOrSettlementDate) &&
        Objects.equals(this.numberOfTransactions, smsLinkedCaseFilingDrfDocumentStructure.numberOfTransactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactName, companyOrInstitution, contactEmail, reasonForFilingCase, processorId, acquirerSwitchSerialNum, transactionOrSettlementDate, numberOfTransactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmsLinkedCaseFilingDrfDocumentStructure {\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    companyOrInstitution: ").append(toIndentedString(companyOrInstitution)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    reasonForFilingCase: ").append(toIndentedString(reasonForFilingCase)).append("\n");
    sb.append("    processorId: ").append(toIndentedString(processorId)).append("\n");
    sb.append("    acquirerSwitchSerialNum: ").append(toIndentedString(acquirerSwitchSerialNum)).append("\n");
    sb.append("    transactionOrSettlementDate: ").append(toIndentedString(transactionOrSettlementDate)).append("\n");
    sb.append("    numberOfTransactions: ").append(toIndentedString(numberOfTransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contactName");
    openapiFields.add("companyOrInstitution");
    openapiFields.add("contactEmail");
    openapiFields.add("reasonForFilingCase");
    openapiFields.add("processorId");
    openapiFields.add("acquirerSwitchSerialNum");
    openapiFields.add("transactionOrSettlementDate");
    openapiFields.add("numberOfTransactions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SmsLinkedCaseFilingDrfDocumentStructure
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SmsLinkedCaseFilingDrfDocumentStructure.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SmsLinkedCaseFilingDrfDocumentStructure is not found in the empty JSON string", SmsLinkedCaseFilingDrfDocumentStructure.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SmsLinkedCaseFilingDrfDocumentStructure.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SmsLinkedCaseFilingDrfDocumentStructure` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contactName") != null && !jsonObj.get("contactName").isJsonNull()) && !jsonObj.get("contactName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactName").toString()));
      }
      if ((jsonObj.get("companyOrInstitution") != null && !jsonObj.get("companyOrInstitution").isJsonNull()) && !jsonObj.get("companyOrInstitution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyOrInstitution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyOrInstitution").toString()));
      }
      if ((jsonObj.get("contactEmail") != null && !jsonObj.get("contactEmail").isJsonNull()) && !jsonObj.get("contactEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactEmail").toString()));
      }
      if ((jsonObj.get("reasonForFilingCase") != null && !jsonObj.get("reasonForFilingCase").isJsonNull()) && !jsonObj.get("reasonForFilingCase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reasonForFilingCase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reasonForFilingCase").toString()));
      }
      if ((jsonObj.get("processorId") != null && !jsonObj.get("processorId").isJsonNull()) && !jsonObj.get("processorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processorId").toString()));
      }
      if ((jsonObj.get("acquirerSwitchSerialNum") != null && !jsonObj.get("acquirerSwitchSerialNum").isJsonNull()) && !jsonObj.get("acquirerSwitchSerialNum").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acquirerSwitchSerialNum` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acquirerSwitchSerialNum").toString()));
      }
      if ((jsonObj.get("transactionOrSettlementDate") != null && !jsonObj.get("transactionOrSettlementDate").isJsonNull()) && !jsonObj.get("transactionOrSettlementDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionOrSettlementDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionOrSettlementDate").toString()));
      }
      if ((jsonObj.get("numberOfTransactions") != null && !jsonObj.get("numberOfTransactions").isJsonNull()) && !jsonObj.get("numberOfTransactions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numberOfTransactions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numberOfTransactions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SmsLinkedCaseFilingDrfDocumentStructure.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SmsLinkedCaseFilingDrfDocumentStructure' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SmsLinkedCaseFilingDrfDocumentStructure> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SmsLinkedCaseFilingDrfDocumentStructure.class));

       return (TypeAdapter<T>) new TypeAdapter<SmsLinkedCaseFilingDrfDocumentStructure>() {
           @Override
           public void write(JsonWriter out, SmsLinkedCaseFilingDrfDocumentStructure value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SmsLinkedCaseFilingDrfDocumentStructure read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SmsLinkedCaseFilingDrfDocumentStructure given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SmsLinkedCaseFilingDrfDocumentStructure
  * @throws IOException if the JSON string is invalid with respect to SmsLinkedCaseFilingDrfDocumentStructure
  */
  public static SmsLinkedCaseFilingDrfDocumentStructure fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SmsLinkedCaseFilingDrfDocumentStructure.class);
  }

 /**
  * Convert an instance of SmsLinkedCaseFilingDrfDocumentStructure to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


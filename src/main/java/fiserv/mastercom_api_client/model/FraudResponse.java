/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fiserv.mastercom_api_client.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fiserv.mastercom_api_client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * FraudResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-07T19:57:39.604201-03:00[America/Buenos_Aires]")
public class FraudResponse {
  public static final String SERIALIZED_NAME_FRAUD_ID = "fraudId";
  @SerializedName(SERIALIZED_NAME_FRAUD_ID)
  private String fraudId;

  public FraudResponse() {
  }

  public FraudResponse fraudId(String fraudId) {
    
    this.fraudId = fraudId;
    return this;
  }

   /**
   * Identifier assigned to the fraud item
   * @return fraudId
  **/
  @javax.annotation.Nullable
  public String getFraudId() {
    return fraudId;
  }


  public void setFraudId(String fraudId) {
    this.fraudId = fraudId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FraudResponse fraudResponse = (FraudResponse) o;
    return Objects.equals(this.fraudId, fraudResponse.fraudId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fraudId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FraudResponse {\n");
    sb.append("    fraudId: ").append(toIndentedString(fraudId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fraudId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to FraudResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FraudResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FraudResponse is not found in the empty JSON string", FraudResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FraudResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FraudResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("fraudId") != null && !jsonObj.get("fraudId").isJsonNull()) && !jsonObj.get("fraudId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fraudId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fraudId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FraudResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FraudResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FraudResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FraudResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<FraudResponse>() {
           @Override
           public void write(JsonWriter out, FraudResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FraudResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FraudResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FraudResponse
  * @throws IOException if the JSON string is invalid with respect to FraudResponse
  */
  public static FraudResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FraudResponse.class);
  }

 /**
  * Convert an instance of FraudResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bp4.mastercom_api_client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import bp4.mastercom_api_client.JSON;

/**
 * ExpeditedBillingDrfDocumentStructure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-07T19:57:39.604201-03:00[America/Buenos_Aires]")
public class ExpeditedBillingDrfDocumentStructure {
  public static final String SERIALIZED_NAME_CARDHOLDER_NAME = "cardholderName";
  @SerializedName(SERIALIZED_NAME_CARDHOLDER_NAME)
  private String cardholderName;

  public static final String SERIALIZED_NAME_ACQUIRER_REF_DATA = "acquirerRefData";
  @SerializedName(SERIALIZED_NAME_ACQUIRER_REF_DATA)
  private String acquirerRefData;

  public static final String SERIALIZED_NAME_TRANSACTION_DATE = "transactionDate";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_DATE)
  private String transactionDate;

  public static final String SERIALIZED_NAME_TRANSACTION_AMOUNT = "transactionAmount";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_AMOUNT)
  private String transactionAmount;

  public static final String SERIALIZED_NAME_DISPUTE_DESCRIPTION = "disputeDescription";
  @SerializedName(SERIALIZED_NAME_DISPUTE_DESCRIPTION)
  private String disputeDescription;

  public static final String SERIALIZED_NAME_CERTIFICATION = "certification";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION)
  private String certification;

  public static final String SERIALIZED_NAME_CHARGEBACK_REPRESENTATIVE = "chargebackRepresentative";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_REPRESENTATIVE)
  private String chargebackRepresentative;

  public ExpeditedBillingDrfDocumentStructure() {
  }

  public ExpeditedBillingDrfDocumentStructure cardholderName(String cardholderName) {
    
    this.cardholderName = cardholderName;
    return this;
  }

   /**
   * CONDITIONAL: The cardholder&#39;s name is optional on Dispute Resolution Form - Pre-Compliance/Compliance form.   Length: 1-30   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return cardholderName
  **/
  @javax.annotation.Nullable
  public String getCardholderName() {
    return cardholderName;
  }


  public void setCardholderName(String cardholderName) {
    this.cardholderName = cardholderName;
  }


  public ExpeditedBillingDrfDocumentStructure acquirerRefData(String acquirerRefData) {
    
    this.acquirerRefData = acquirerRefData;
    return this;
  }

   /**
   * The Acquirerâ€™s Reference Data.   Length: 1-23   Valid Values/Format: Numeric
   * @return acquirerRefData
  **/
  @javax.annotation.Nullable
  public String getAcquirerRefData() {
    return acquirerRefData;
  }


  public void setAcquirerRefData(String acquirerRefData) {
    this.acquirerRefData = acquirerRefData;
  }


  public ExpeditedBillingDrfDocumentStructure transactionDate(String transactionDate) {
    
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * The transaction date.   Length: 11   Valid Values/Format: Date (dd-MMM-yyyy)
   * @return transactionDate
  **/
  @javax.annotation.Nullable
  public String getTransactionDate() {
    return transactionDate;
  }


  public void setTransactionDate(String transactionDate) {
    this.transactionDate = transactionDate;
  }


  public ExpeditedBillingDrfDocumentStructure transactionAmount(String transactionAmount) {
    
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * The total transaction amount.   Length: 4-12   Valid Values/Format: Numeric
   * @return transactionAmount
  **/
  @javax.annotation.Nullable
  public String getTransactionAmount() {
    return transactionAmount;
  }


  public void setTransactionAmount(String transactionAmount) {
    this.transactionAmount = transactionAmount;
  }


  public ExpeditedBillingDrfDocumentStructure disputeDescription(String disputeDescription) {
    
    this.disputeDescription = disputeDescription;
    return this;
  }

   /**
   * Give a reasonably specific description of the dispute.   Length: 1-1500   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return disputeDescription
  **/
  @javax.annotation.Nullable
  public String getDisputeDescription() {
    return disputeDescription;
  }


  public void setDisputeDescription(String disputeDescription) {
    this.disputeDescription = disputeDescription;
  }


  public ExpeditedBillingDrfDocumentStructure certification(String certification) {
    
    this.certification = certification;
    return this;
  }

   /**
   * Who is the company representative or government agency representative on behalf of the corporate card.   Length: 1-24   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return certification
  **/
  @javax.annotation.Nullable
  public String getCertification() {
    return certification;
  }


  public void setCertification(String certification) {
    this.certification = certification;
  }


  public ExpeditedBillingDrfDocumentStructure chargebackRepresentative(String chargebackRepresentative) {
    
    this.chargebackRepresentative = chargebackRepresentative;
    return this;
  }

   /**
   * Customer Service/Chargeback Representative.   Length: 1-25   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return chargebackRepresentative
  **/
  @javax.annotation.Nullable
  public String getChargebackRepresentative() {
    return chargebackRepresentative;
  }


  public void setChargebackRepresentative(String chargebackRepresentative) {
    this.chargebackRepresentative = chargebackRepresentative;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpeditedBillingDrfDocumentStructure expeditedBillingDrfDocumentStructure = (ExpeditedBillingDrfDocumentStructure) o;
    return Objects.equals(this.cardholderName, expeditedBillingDrfDocumentStructure.cardholderName) &&
        Objects.equals(this.acquirerRefData, expeditedBillingDrfDocumentStructure.acquirerRefData) &&
        Objects.equals(this.transactionDate, expeditedBillingDrfDocumentStructure.transactionDate) &&
        Objects.equals(this.transactionAmount, expeditedBillingDrfDocumentStructure.transactionAmount) &&
        Objects.equals(this.disputeDescription, expeditedBillingDrfDocumentStructure.disputeDescription) &&
        Objects.equals(this.certification, expeditedBillingDrfDocumentStructure.certification) &&
        Objects.equals(this.chargebackRepresentative, expeditedBillingDrfDocumentStructure.chargebackRepresentative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardholderName, acquirerRefData, transactionDate, transactionAmount, disputeDescription, certification, chargebackRepresentative);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpeditedBillingDrfDocumentStructure {\n");
    sb.append("    cardholderName: ").append(toIndentedString(cardholderName)).append("\n");
    sb.append("    acquirerRefData: ").append(toIndentedString(acquirerRefData)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    disputeDescription: ").append(toIndentedString(disputeDescription)).append("\n");
    sb.append("    certification: ").append(toIndentedString(certification)).append("\n");
    sb.append("    chargebackRepresentative: ").append(toIndentedString(chargebackRepresentative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cardholderName");
    openapiFields.add("acquirerRefData");
    openapiFields.add("transactionDate");
    openapiFields.add("transactionAmount");
    openapiFields.add("disputeDescription");
    openapiFields.add("certification");
    openapiFields.add("chargebackRepresentative");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ExpeditedBillingDrfDocumentStructure
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExpeditedBillingDrfDocumentStructure.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExpeditedBillingDrfDocumentStructure is not found in the empty JSON string", ExpeditedBillingDrfDocumentStructure.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExpeditedBillingDrfDocumentStructure.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExpeditedBillingDrfDocumentStructure` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cardholderName") != null && !jsonObj.get("cardholderName").isJsonNull()) && !jsonObj.get("cardholderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardholderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardholderName").toString()));
      }
      if ((jsonObj.get("acquirerRefData") != null && !jsonObj.get("acquirerRefData").isJsonNull()) && !jsonObj.get("acquirerRefData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acquirerRefData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acquirerRefData").toString()));
      }
      if ((jsonObj.get("transactionDate") != null && !jsonObj.get("transactionDate").isJsonNull()) && !jsonObj.get("transactionDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionDate").toString()));
      }
      if ((jsonObj.get("transactionAmount") != null && !jsonObj.get("transactionAmount").isJsonNull()) && !jsonObj.get("transactionAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionAmount").toString()));
      }
      if ((jsonObj.get("disputeDescription") != null && !jsonObj.get("disputeDescription").isJsonNull()) && !jsonObj.get("disputeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disputeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disputeDescription").toString()));
      }
      if ((jsonObj.get("certification") != null && !jsonObj.get("certification").isJsonNull()) && !jsonObj.get("certification").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certification` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certification").toString()));
      }
      if ((jsonObj.get("chargebackRepresentative") != null && !jsonObj.get("chargebackRepresentative").isJsonNull()) && !jsonObj.get("chargebackRepresentative").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chargebackRepresentative` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chargebackRepresentative").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExpeditedBillingDrfDocumentStructure.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExpeditedBillingDrfDocumentStructure' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExpeditedBillingDrfDocumentStructure> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExpeditedBillingDrfDocumentStructure.class));

       return (TypeAdapter<T>) new TypeAdapter<ExpeditedBillingDrfDocumentStructure>() {
           @Override
           public void write(JsonWriter out, ExpeditedBillingDrfDocumentStructure value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExpeditedBillingDrfDocumentStructure read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ExpeditedBillingDrfDocumentStructure given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ExpeditedBillingDrfDocumentStructure
  * @throws IOException if the JSON string is invalid with respect to ExpeditedBillingDrfDocumentStructure
  */
  public static ExpeditedBillingDrfDocumentStructure fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExpeditedBillingDrfDocumentStructure.class);
  }

 /**
  * Convert an instance of ExpeditedBillingDrfDocumentStructure to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


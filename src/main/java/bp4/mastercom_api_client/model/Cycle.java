/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package bp4.mastercom_api_client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Optional cycle values from 1 to 7.   Length: 1   Valid Values/Format: 1, 2, 3, 4, 5, 6, 7
 */
@JsonAdapter(Cycle.Adapter.class)
public enum Cycle {
  
  NUMBER_1(1),
  
  NUMBER_2(2),
  
  NUMBER_3(3),
  
  NUMBER_4(4),
  
  NUMBER_5(5),
  
  NUMBER_6(6),
  
  NUMBER_7(7);

  private Integer value;

  Cycle(Integer value) {
    this.value = value;
  }

  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Cycle fromValue(Integer value) {
    for (Cycle b : Cycle.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Cycle> {
    @Override
    public void write(final JsonWriter jsonWriter, final Cycle enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Cycle read(final JsonReader jsonReader) throws IOException {
      Integer value = jsonReader.nextInt();
      return Cycle.fromValue(value);
    }
  }
}

